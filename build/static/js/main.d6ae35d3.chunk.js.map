{"version":3,"sources":["../../HWLes15skil.com/react-tutorial/src/Table.js","../../HWLes15skil.com/react-tutorial/src/Form.js","../../HWLes15skil.com/react-tutorial/src/App.js","../../HWLes15skil.com/react-tutorial/src/index.js"],"names":["TableBody","props","date","react_default","a","createElement","lib_default","format","time","rows","commentData","map","row","index","className","key","name","comment","data-date","data-time","onClick","removeComment","Comment","_this$props","this","Table_TableBody","Component","Form","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","_event$target","target","value","setState","defineProperty","submitForm","handleSubmit","state","initialState","_this$state","type","onChange","App","comments","filter","character","i","commentBlock","concat","toConsumableArray","localStorage","getItem","JSON","parse","isLoading","console","log","fetchData","nextProps","nextState","setItem","stringify","Table","src_Form","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d6ae35d3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Clock from 'react-live-clock';\r\n\r\n\r\nconst TableBody = props => {\r\n\r\n    const date = <Clock format={'DD:MM:YY'} />;\r\n    const time = <Clock format={'HH:mm:ss'} />;\r\n\r\n    const rows = props.commentData.map((row, index) => {\r\n\r\n        return (\r\n            <div className=\"task\" key={index}>\r\n                <div className=\"name-task\">Name: {row.name}</div>\r\n                <div className=\"task-description\">Comment: {row.comment}</div>\r\n                <div>\r\n                    <span data-date=\"date\">Date: {date} </span>\r\n                    <span data-time=\"time\"> Time: {time} </span>\r\n                </div>\r\n                <div><button onClick={() => props.removeComment(index)}>Delete</button></div>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return <div>{rows}</div>\r\n}\r\n\r\nclass Comment extends Component {\r\n    render() {\r\n        const { commentData, removeComment } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <TableBody commentData={commentData} removeComment={removeComment} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Comment\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.initialState = {\r\n            name: '',\r\n            comment: '',\r\n        };\r\n\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    handleChange = event => {\r\n        const {name, value} = event.target;\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    submitForm = () => {\r\n\r\n        this.props.handleSubmit(this.state);\r\n        this.setState(this.initialState);\r\n    }\r\n\r\n    render() {\r\n        const {name, comment} = this.state;\r\n\r\n        return (\r\n            <form>\r\n                <label>Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={this.handleChange} />\r\n                <label>comment</label>\r\n                <textarea\r\n                    type=\"text\"\r\n                    name=\"comment\"\r\n                    value={comment}\r\n                    onChange={this.handleChange} />\r\n                <input\r\n                    type=\"button\"\r\n                    value=\"Submit\"\r\n                    onClick={this.submitForm} />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n\r\n","import React, { Component } from 'react';\r\nimport Comment from './Table';\r\nimport Form from './Form';\r\nimport Clock from 'react-live-clock';\r\n\r\n\r\n\r\nclass App extends Component {\r\n    state = {\r\n        comments: [],\r\n        date: [],\r\n        time: [],\r\n    };\r\n\r\n    componentWillMount() {\r\n        localStorage.getItem('comments') && this.setState({\r\n            comments: JSON.parse(localStorage.getItem('comments')),\r\n            isLoading: false\r\n        });\r\n        localStorage.getItem('date') && this.setState({\r\n            date: JSON.parse(localStorage.getItem('date')),\r\n            isLoading: false\r\n        });\r\n        localStorage.getItem('time') && this.setState({\r\n            time: JSON.parse(localStorage.getItem('time')),\r\n            isLoading: false\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!localStorage.getItem('comments')){\r\n            this.fetchData();\r\n        }\r\n        else {\r\n            console.log('Using date from LocalStorage.')\r\n        }\r\n    }\r\n\r\n    fetchData(){\r\n\r\n    }\r\n\r\n    removeComment = index => {\r\n        const {comments} = this.state;\r\n\r\n        this.setState({\r\n            comments: comments.filter((character, i) => {\r\n                return i !== index\r\n            }),\r\n        });\r\n    }\r\n\r\n    handleSubmit = commentBlock => {\r\n\r\n        const {date, time} = this.state;\r\n\r\n        this.setState({\r\n            comments: [...this.state.comments, commentBlock],\r\n            date: [...this.state.date, <Clock format={'DD:MM:YY'} />],\r\n            time: [...this.state.time, <Clock format={'HH:mm:ss'} />],\r\n        });\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState) {\r\n        localStorage.setItem('comments', JSON.stringify(nextState.comments));\r\n        localStorage.setItem('date', JSON.stringify(nextState.date));\r\n        localStorage.setItem('time', JSON.stringify(nextState.time));\r\n    }\r\n\r\n    render() {\r\n        const {comments} = this.state;\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>React Tutorial</h1>\r\n                <p>Add your comment and your name.</p>\r\n                <Comment\r\n                    commentData={comments}\r\n                    removeComment={this.removeComment}\r\n                />\r\n                <h3>Add New</h3>\r\n                <Form handleSubmit={this.handleSubmit} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default App\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}